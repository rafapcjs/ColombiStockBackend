spring:
  application:
    name: demo

  datasource:
    url: ${DB_URL}                  # Reemplaza ${url} con ${DB_URL} para estandarizar nombres
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10          # Máximo de conexiones en el pool
      minimum-idle: 2                # Conexiones mínimas ociosas
      max-lifetime: 30000            # Cierre de conexiones luego de 30s (útil en dev o para evitar conexiones muertas)
      connection-timeout: 20000      # Tiempo máx. para obtener una conexión (20s)
      validation-timeout: 5000       # Tiempo máx. para validar una conexión (5s)
      keepalive-time: 15000          # "Ping" cada 15s para mantenerlas vivas
      connection-test-query: SELECT 1

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update              # Solo usar "update" en desarrollo, preferiblemente "validate" en producción
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB

security:
  jwt:
    key:
      private: ${JWT_PRIVATE_KEY}   # Se recomienda usar Base64 para manejar la clave como string
    user:
      generator: auth-service

email:
  sender: ${EMAIL_SENDER}           # Usa variables de entorno para mayor seguridad
  password: ${EMAIL_PASSWORD}       # No incluyas contraseñas directamente en el YAML
